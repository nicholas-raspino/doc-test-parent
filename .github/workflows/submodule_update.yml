name: Update Submodules
on:
  repository_dispatch:
    types:
      - client-submodule-update
permissions:
  contents: write
  pull-requests: write
jobs:
  submodule-update-pr-creation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.DOCS_SITE_GET_TOKEN_APP_ID }}
          private-key: ${{ secrets.DOCS_SITE_GET_TOKEN_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
      - name: check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          # token: ${{ secrets.NICH1370_PAT}}
          fetch-depth: 0
          submodules: recursive
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: true
      - name: Git config & Update Submodules
        run: |
          # git config --global url.https://oath2:${GH_TOKEN}}@github.com/.insteadOf https://github.com/
          # git config user.name "github-actions[bot]"
          # git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git submodule update --init --recursive
          git submodule update --remote --recursive --merge
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.app-token.outputs.token }}
          # token: ${{ secrets.NICH1370_PAT}}
          branch: ${{ github.event.client_payload.repo }}/client-update
          commit-message: "Auto updated submodule(s)"
          delete-branch: true
          title: "[Submodule Update] ${{ github.event.client_payload.repo }} updated"
          body: |
            Report
            - Updated due to update from ${{ github.event.client_payload.repo }}
            - Auto-generated by [create-pull-request][1]

            actor: ${{ github.actor }}
            payload: ${{ toJSON(github.event.client_payload) }}

            [1]: https://github.com/peter-evans/create-pull-request
      # - name: Set up auto-merge
      #   env:
      #     GH_TOKEN: ${{ steps.app-token.outputs.token }}
      #   if: steps.create_pr.outputs.pull-request-operation == 'created'
      #   run: |
      #     gh pr merge ${{ steps.create_pr.outputs.pull-request-number }} -m -d --auto
      #     gh pr review ${{ steps.create_pr.outputs.pull-request-number }} --approve

